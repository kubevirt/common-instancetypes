---
name: Main
on:
  push:
    tags:
      - "v*.*.*"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          for f in $(ls *bundle.yaml); do
            cp ${f} ${f/\.yaml/-${{ github.ref_name }}\.yaml}
          done
      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *bundle-${{ github.ref_name }}.yaml
            LICENSE
      - name: Update SSP Operator
        run: |
          # Define vars
          export VERSION="${{ github.ref_name }}"
          export RELEASE_FORK_USER=lyarwood

          # Set git configs to sign the commit
          git config --global user.email "${RELEASE_FORK_USER}@redhat.com"
          git config --global user.name "common-instancetypes Release Automation"

          # Clone repo and use a token to allow pushing before creating a PR
          git clone https://github.com/kubevirt/ssp-operator && cd ssp-operator
          git checkout origin/master -b update-common-instancetypes-${VERSION}

          # Update the new common-instancetypes file
          cp ../common-clusterinstancetypes-bundle.yaml data/common-instancetypes-bundle/
          cp ../common-clusterpreferences-bundle.yaml data/common-instancetypes-bundle/
          git add data && git commit -sm "common-instancetypes: Update bundle to version ${VERSION}"

          git remote add release https://${RELEASE_FORK_USER}:${{ secrets.RELEASE_FORK_TOKEN }}@github.com/${RELEASE_FORK_USER}/ssp-operator
          git push -f -u release update-common-instancetypes-${VERSION}

          # Create a new PR in the operator repo
          GH_TOKEN=${{ secrets.RELEASE_FORK_TOKEN }} gh pr create --repo kubevirt/ssp-operator \
            --base master \
            --head ${RELEASE_FORK_USER}:update-common-instancetypes-${VERSION} \
            --title "Update common-instancetypes to ${VERSION}" \
            --body "$(cat << EOF
          common-instancetypes: Update bundle to ${VERSION}

          ${{ steps.release.outputs.url }}

          **Release note**:
          \`\`\`release-note
          Update common-instancetypes bundle to ${VERSION}
          \`\`\`
          EOF
          )
          "
